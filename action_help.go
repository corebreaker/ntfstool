package main

import (
	"fmt"
	"os"
)

func do_help(arg *tActionArg) error {
	prog := os.Args[0] + " " + _HELP_PARTITION_EXAMPLE

	fmt.Println("Usage:", os.Args[0], "partition parameters")
	fmt.Println()
	fmt.Println("  partition  =", _HELP_PARTITION_DESC)
	fmt.Println("  parameters = space separated list of parameters formated as following:")
	fmt.Println("     - `name=value` for a parameter with a value, `name` is the parameter name")
	fmt.Println("     - `name` for a parameter without any value")
	fmt.Println()
	fmt.Println("   example:", prog, "param1=val2 param2=value2 param3=value3")
	fmt.Println()
	fmt.Println("Some parameters configures commands. This is the list of command configurators:")
	fmt.Println("  - in=`input`:     specifies an `input` file for others commands")
	fmt.Println("  - out=`output`:   specifies an `output` file for others commands")
	fmt.Println("  - mft=offset:     specifies the MFT shift from the partition starting with an offset in the partition")
	fmt.Println("  - start=offset:   specifies the offset in the partition where the readind starts (partition start)")
	fmt.Println()
	fmt.Println("Some parameters are commands. This is the list of commands:")
	fmt.Println("  - help:           shows this help")
	fmt.Println("  - count=pattern:  shows the counts of the records that follows the record type pattern")
	fmt.Println("  - scan:           scans the partition to find MFTs and MFT records and report them to the output file")
	fmt.Println("  - file-count:     shows count of file records in the input file with a file node format")
	fmt.Println("  - state-count:    shows count of state records in the input file with a state format")
	fmt.Println("  - show=n:         shows n-th record in the input file, first record has `n` equal to zero")
	fmt.Println("  - at=position:    shows the record in the input file at the specified file position (offset)")
	fmt.Println("  - show-mft=id:    shows the MFT from its ID in the input file with the state format")
	fmt.Println("  - check:          checks the integrity of data structures in the input file in the state format")
	fmt.Println("  - list-names:     list filenames in input file with the state format")
	fmt.Println("  - complete:       completes datas from the input file into the output file (in the state format)")
	fmt.Println("  - ls[=dirnum]:    list files in directory number from the input file in file node format")
	fmt.Println("  - cp=fileno:      copy file from partition into the output file with the help of the input file")
	fmt.Println("  - fill:           fill data info from the input file into the output file (in the state format)")
	fmt.Println("  - fix-mft:        fixes MFT entries from the input file into the output file (in the state format)")
	fmt.Println("  - make-filelist:  builds the file list from the input file (states) into the output file (file nodes)")
	fmt.Println("  - record=offset:  shows MFT record read from partition with an offset in MFT")
	fmt.Println("  - find:           find a record in the input file")
	fmt.Println("  - names:          shows names of MFT records in MFT from the partition")
	fmt.Println("  - sector=offset:  shows the sector with its offset in the partition")
	fmt.Println("  - cluster=offset: shows the cluster with its offset in the partition")
	fmt.Println("  - file=number:    inspects file records in MFT from the partition")
	fmt.Println()
	fmt.Println("Commands for inspecting partitions: record, names, file.")
	fmt.Println()
	fmt.Println("Offset has unit suffixes:")
	fmt.Println("  - c = clusters, example: 2c = 2 clusters")
	fmt.Println("  - s = sectors, example: 4s = 4 sectors (2Ko)")
	fmt.Println()
	fmt.Println("Shows the MBR content:", prog)
	fmt.Println()
	fmt.Println("For inspecting file records in MFT from partition:")
	fmt.Println("  - ", prog, "mft=2c file=0 raw")
	fmt.Println()
	fmt.Println("File recovery:")
	fmt.Println(" 1.", prog, "out=00_scan.dat scan")
	fmt.Println(" 2.", prog, "in=00_scan.dat out=01_base.dat fill")
	fmt.Println(" 3.", prog, "in=01_base.dat check")
	fmt.Println(" 4.", prog, "in=01_base.dat out=02_records.dat complete")
	fmt.Println(" 5.", prog, "in=02_records.dat out=03_fslist.dat fix-mft")
	fmt.Println(" 6.", prog, "in=03_fslist.dat out=04_dir.dat make-filelist")
	fmt.Println(" 7.", prog, "in=04_dir.dat out=recovered.file cp=12")
	fmt.Println()

	return nil
}
